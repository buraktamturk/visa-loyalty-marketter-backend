// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Visa.Marketter.Models;

namespace Visa.Marketter.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181125020041_Campaigns")]
    partial class Campaigns
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Visa.Marketter.Models.campaign", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("created_at");

                    b.Property<string>("name")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("updated_at");

                    b.Property<int>("visa_offer_id");

                    b.HasKey("id");

                    b.ToTable("campaigns");
                });

            modelBuilder.Entity("Visa.Marketter.Models.campaign_customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("campaign_id");

                    b.Property<int>("customer_id");

                    b.Property<string>("render_id")
                        .HasMaxLength(256);

                    b.Property<int>("status");

                    b.Property<DateTimeOffset?>("updated_at");

                    b.HasKey("id");

                    b.HasIndex("campaign_id");

                    b.HasIndex("customer_id");

                    b.ToTable("campaign_customers");
                });

            modelBuilder.Entity("Visa.Marketter.Models.client", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("client_name")
                        .HasMaxLength(256);

                    b.Property<byte[]>("client_secret_hash");

                    b.Property<byte[]>("client_secret_salt");

                    b.Property<string>("copyright_text")
                        .HasMaxLength(256);

                    b.Property<string>("product_name")
                        .HasMaxLength(256);

                    b.Property<string>("sender")
                        .HasMaxLength(256);

                    b.Property<bool>("trusted");

                    b.HasKey("id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("Visa.Marketter.Models.customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("card_number")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("created_at");

                    b.Property<string>("email")
                        .HasMaxLength(256);

                    b.Property<string>("name")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("updated_at");

                    b.HasKey("id");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("Visa.Marketter.Models.personal_access_token", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("created_at");

                    b.Property<DateTimeOffset?>("deleted_at");

                    b.Property<string>("name")
                        .HasMaxLength(256);

                    b.Property<byte[]>("password_hash");

                    b.Property<byte[]>("password_salt");

                    b.Property<DateTimeOffset?>("updated_at");

                    b.Property<int>("user_id");

                    b.Property<int?>("userid");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.ToTable("pacs");
                });

            modelBuilder.Entity("Visa.Marketter.Models.refresh_token", b =>
                {
                    b.Property<Guid>("id");

                    b.Property<Guid?>("client_id");

                    b.Property<Guid?>("clientid");

                    b.Property<DateTimeOffset>("created_at");

                    b.Property<byte[]>("exchange_code_hash");

                    b.Property<byte[]>("exchange_code_salt");

                    b.Property<byte[]>("refresh_token_hash");

                    b.Property<byte[]>("refresh_token_salt");

                    b.Property<int>("user_id");

                    b.Property<int?>("userid");

                    b.HasKey("id");

                    b.HasIndex("clientid");

                    b.HasIndex("userid");

                    b.ToTable("refresh_tokens");
                });

            modelBuilder.Entity("Visa.Marketter.Models.user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("created_at");

                    b.Property<string>("email")
                        .HasMaxLength(256);

                    b.Property<string>("name")
                        .HasMaxLength(256);

                    b.Property<byte[]>("password_hash");

                    b.Property<byte[]>("password_salt");

                    b.Property<DateTimeOffset?>("password_set_at");

                    b.Property<int>("type");

                    b.Property<DateTimeOffset?>("updated_at");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Visa.Marketter.Models.campaign_customer", b =>
                {
                    b.HasOne("Visa.Marketter.Models.campaign", "campaign")
                        .WithMany("customers")
                        .HasForeignKey("campaign_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Visa.Marketter.Models.customer", "customer")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Visa.Marketter.Models.personal_access_token", b =>
                {
                    b.HasOne("Visa.Marketter.Models.user", "user")
                        .WithMany()
                        .HasForeignKey("userid");
                });

            modelBuilder.Entity("Visa.Marketter.Models.refresh_token", b =>
                {
                    b.HasOne("Visa.Marketter.Models.client", "client")
                        .WithMany("refresh_tokens")
                        .HasForeignKey("clientid");

                    b.HasOne("Visa.Marketter.Models.user", "user")
                        .WithMany()
                        .HasForeignKey("userid");
                });
#pragma warning restore 612, 618
        }
    }
}
